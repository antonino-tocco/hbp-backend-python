version: '3.9'

services:
  hbp_es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: hbp_es01
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - network.host=0.0.0.0
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
    volumes:
      - data01:/usr/app/data01
    expose:
      - 9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    logging:
      driver: "none"
#  kib01:
#    image: docker.elastic.co/kibana/kibana:7.8.1
#    container_name: kib01
#    depends_on:
#      - es01
#    ports:
#      - 17896:5601
#    environment:
#      ELASTICSEARCH_URL: http://es01:9200
#      ELASTICSEARCH_HOSTS: http://es01:9200
#    logging:
#      driver: "none"
  hbp_backend:
    build: .
    container_name: hbp_backend
    restart: on-failure
    environment:
      - ELASTIC_SEARCH_URL=http://hbp_es01:9200
      - WAIT_COMMAND=[ $$(curl --write-out %{http_code} --silent --output /dev/null http://hbp_es01:9200/_cat/health?h=st) = 200 ]
      - WAIT_START_CMD=uwsgi uwsgi.ini --enable-threads
      - WAIT_SLEEP=10
      - WAIT_LOOPS=50
    env_file:
      - backend.env
    ports:
      - 17895:5000
    depends_on:
      - hbp_es01
    links:
      - hbp_es01
  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    logging:
      driver: "none"
    depends_on:
      - hbp_backend
    links:
      - hbp_backend
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nginx
    logging:
      driver: "none"


volumes:
  data01:
    driver: local
    driver_opts:
        type: none
        o: bind
        device: /mnt/facility-hub-storage

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450